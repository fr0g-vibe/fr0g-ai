version: '3.8'

services:
  fr0g-ai-aip:
    build: 
      context: ./fr0g-ai-aip
      dockerfile: Dockerfile
    container_name: fr0g-ai-aip
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - FR0G_STORAGE_TYPE=${FR0G_AIP_STORAGE_TYPE:-file}
      - FR0G_DATA_DIR=${FR0G_AIP_DATA_DIR:-/app/data}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - aip_data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - fr0g-ai-network

  fr0g-ai-bridge:
    build: 
      context: ./fr0g-ai-bridge
      dockerfile: Dockerfile
    container_name: fr0g-ai-bridge
    ports:
      - "8081:8080"
      - "9091:9090"
    environment:
      - OPENWEBUI_BASE_URL=${OPENWEBUI_BASE_URL:-http://openwebui:3000}
      - OPENWEBUI_API_KEY=${OPENWEBUI_API_KEY}
      - HTTP_PORT=${FR0G_BRIDGE_HTTP_PORT:-8080}
      - GRPC_PORT=${FR0G_BRIDGE_GRPC_PORT:-9090}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - AIP_GRPC_ENDPOINT=fr0g-ai-aip:9090
    volumes:
      - bridge_config:/app/config
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      fr0g-ai-aip:
        condition: service_healthy
    networks:
      - fr0g-ai-network

  # Optional: Add OpenWebUI for complete AI chat interface
  # Uncomment to enable full AI chat capabilities
  # openwebui:
  #   image: ghcr.io/open-webui/open-webui:main
  #   container_name: fr0g-ai-openwebui
  #   ports:
  #     - "3000:8080"
  #   environment:
  #     - OLLAMA_BASE_URL=http://ollama:11434
  #     - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-your-secret-key}
  #   volumes:
  #     - openwebui_data:/app/backend/data
  #   restart: unless-stopped
  #   networks:
  #     - fr0g-ai-network

volumes:
  aip_data:
    driver: local
  bridge_config:
    driver: local
  openwebui_data:
    driver: local

networks:
  fr0g-ai-network:
    driver: bridge
    name: fr0g-ai-network
